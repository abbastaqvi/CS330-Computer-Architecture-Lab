$date
	Fri Mar 25 12:34:02 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_tb $end
$var wire 1 ! RegWrite $end
$var wire 4 " Operation [3:0] $end
$var wire 1 # MemWrite $end
$var wire 1 $ MemRead $end
$var wire 1 % Branch $end
$var wire 1 & ALUSrc $end
$var reg 4 ' Funct [3:0] $end
$var reg 7 ( Opcode [6:0] $end
$scope module t1 $end
$var wire 4 ) Funct [3:0] $end
$var wire 7 * Opcode [6:0] $end
$var wire 1 ! RegWrite $end
$var wire 4 + Operation [3:0] $end
$var wire 1 , MemtoReg $end
$var wire 1 # MemWrite $end
$var wire 1 $ MemRead $end
$var wire 1 % Branch $end
$var wire 1 & ALUSrc $end
$var wire 2 - ALUOp [1:0] $end
$scope module ac1 $end
$var wire 4 . Funct [3:0] $end
$var wire 2 / ALUOp [1:0] $end
$var reg 4 0 Operation [3:0] $end
$upscope $end
$scope module c1 $end
$var wire 7 1 Opcode [6:0] $end
$var reg 2 2 ALUOp [1:0] $end
$var reg 1 & ALUSrc $end
$var reg 1 % Branch $end
$var reg 1 $ MemRead $end
$var reg 1 # MemWrite $end
$var reg 1 , MemtoReg $end
$var reg 1 ! RegWrite $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1 2
b1100011 1
b110 0
b1 /
b0 .
b1 -
x,
b110 +
b1100011 *
b0 )
b1100011 (
b0 '
0&
1%
0$
0#
b110 "
0!
$end
#10
b10 "
b10 +
b10 0
b0 -
b0 /
b0 2
0%
1#
1&
b100011 (
b100011 *
b100011 1
#20
b10 -
b10 /
b10 2
0#
1$
1!
1,
b11 (
b11 *
b11 1
#30
0$
0,
0&
b110011 (
b110011 *
b110011 1
#40
b110 "
b110 +
b110 0
b1000 '
b1000 )
b1000 .
#50
b0 "
b0 +
b0 0
b111 '
b111 )
b111 .
#60
b1 "
b1 +
b1 0
b110 '
b110 )
b110 .
